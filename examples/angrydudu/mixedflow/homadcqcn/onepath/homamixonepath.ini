[General]
network = homamixonepath

warnings = true
sim-time-limit = 10s


# udp app configuration
**.s1*.numApps = 1
**.s1*.app[0].typename = "DcqcnBasicApp"
**.s1*.app[0].localPort = 100
**.s1*.app[0].destPort = 100
**.s1*.app[0].messageLength = 14680000000B # turn into 1526 bytes Ether Frame
**.s1*.app[0].sendInterval = 10.01s + uniform(-0.000009s,0.000009s)
**.s1*.app[0].AppPrioirty = 7


**.s2*.numApps = 1
**.s2*.app[*].typename = "HomaBasicApp"
**.s2*.app[*].sendInterval = 0.1s
**.s2*.app[*].messageLength = 100000000B
**.r2*.numApps = 1
**.r2*.app[0].typename = "HomaBasicApp"
**.r21.app[0].localAddress = "r21"
**.r22.app[0].localAddress = "r22"
**.r23.app[0].localAddress = "r23"
**.r24.app[0].localAddress = "r24"
**.r25.app[0].localAddress = "r25"

**.s1*.app[0].destAddresses = "r11 r12 r13 r14 r15"
**.s2*.app[0].destAddresses = "r21 r22 r23 r24 r25"

**.s11.app[0].destAddresses = "r11"
**.s11.app[0].localAddress = "s11"
**.s11.app[0].startTime = 0s
**.s11.app[0].stopTime = 10s

**.s12.app[0].destAddresses = "r12"
**.s12.app[0].localAddress = "s12"
**.s12.app[0].startTime = 0.01s
**.s12.app[0].stopTime = 10s

**.s13.app[0].destAddresses = "r13"
**.s13.app[0].localAddress = "s13"
**.s13.app[0].startTime = 10s
**.s13.app[0].stopTime = 11s

**.s14.app[0].destAddresses = "r14"
**.s14.app[0].localAddress = "s14"
**.s14.app[0].startTime = 10s
**.s14.app[0].stopTime = 11s

**.s15.app[0].destAddresses = "r15"
**.s15.app[0].localAddress = "s15"
**.s15.app[0].startTime = 10.08s
**.s15.app[0].stopTime = 10.12s

**.s21.app[0].destAddresses = "r21"
**.s21.app[0].localAddress = "s21"
**.s21.app[0].startTime = 0.005s
**.s21.app[0].stopTime = 12s

**.s22.app[0].destAddresses = "r22"
**.s22.app[0].localAddress = "s22"
**.s22.app[0].startTime = 0.02s
**.s22.app[0].stopTime = 12s

**.s23.app[0].destAddresses = "r23"
**.s23.app[0].localAddress = "s23"
**.s23.app[0].startTime = 11s
**.s23.app[0].stopTime = 12s

**.s24.app[0].destAddresses = "r24"
**.s24.app[0].localAddress = "s24"
**.s24.app[0].startTime = 11s
**.s24.app[0].stopTime = 12s

**.s25.app[0].destAddresses = "r25"
**.s25.app[0].localAddress = "s25"
**.s25.app[0].startTime = 11s
**.s25.app[0].stopTime = 12s

**.r*.numApps = 1
**.r*.app[0].typename = "UdpSink"
**.r*.app[0].localPort = 100
**.r*.app[0].linkSpeed = 10000Mbps

**.*.dcqcn.activate = true
**.*.dcqcn.linkspeed = 10Gbps
**.*.dcqcn.baseRTT = 0.000012s
**.*.dcqcn.min_cnp_interval = 20us
**.*.dcqcn.AlphaTimer_th = 22us
**.*.dcqcn.RateTimer_th = 22us
**.*.dcqcn.ByteCounter_th = 200000B
**.*.dcqcn.gamma = 1/256
**.*.dcqcn.Rai = 40Mbps
**.*.dcqcn.Rhai = 100Mbps

**.*.homa.explicitUnschedPrioCutoff = "250 450 600 900 1300 9000"

**.*.homa.destPort = 2020
**.*.homa.localPort = 2020
**.*.homa.nicLinkSpeed = 10Gbps
**.*.homa.unschedPrioResolutionMode = "${unschedPrioResolutionMode = STATIC_CBF_UNIFORM}"
**.*.homa.rttBytes = ${RTT=0x2710} B ##10000B is the rttBytes (ie. rtt*nicLinkSpeed).
**.*.homa.linkCheckBytes = 1000B
**.*.homa.prioLevels = ${prioLevels = 8}
**.*.homa.workloadType = "FACEBOOK_HADOOP_ALL"
**.*.homa.adaptiveSchedPrioLevels = ${adaptiveSchedPrioLevels = 6}
**.*.homa.numSendersToKeepGranted = ${numSendersToKeepGranted = 6}
**.*.homa.prioResolverPrioLevels = ${prioResolverPrioLevels = $prioLevels - $adaptiveSchedPrioLevels}

**.*.eth[*].queue.*.enablePfc = false
**.*.eth[*].queue.*.enableEcn = false
**.*.eth[*].queue.*.kmin = 5000B
**.*.eth[*].queue.*.kmax = 200000B
**.*.eth[*].queue.*.pmax = 0.01

**.*.eth[*].queue.*.shareBufferEcn = true
**.*.eth[*].queue.*.EcnKmin = 5000B 
**.*.eth[*].queue.*.EcnKmax = 200000B
**.*.eth[*].queue.*.EcnPmax = 0.01

#**.eth[*].queue.typename= "DropTailQueue"
**.*.eth[*].queue.typename= "PriorityQueue"
**.eth[*].queue.*.frameCapacity = 150

**.Router*.eth[*].encap.typename = "EtherEncap"
#**.Router*.eth[*].encap.linkspeed = 100Gbps

**.r*.eth[*].queue.creditDelayer.delay = uniform(10ns,1us) # for fair dropping the credits, time jitter

**.*.thruputMeter.startTime = 0s
**.*.thruputMeter.endTime = 10s
**.*.thruputMeter.batchSize = 100000
**.*.thruputMeter.maxInterval = 0.001s

#**.channel.utilization.result-recording-modes = timeavg
#**.channel.utilization.statistic-recording = true


# Ethernet switch
